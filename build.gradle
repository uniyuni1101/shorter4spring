buildscript {
    dependencies {
        classpath 'org.flywaydb:flyway-database-postgresql:10.11.1'
    }
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.flywaydb.flyway' version '10.11.1'
	id 'org.jooq.jooq-codegen-gradle' version '3.19.7'
}

group = ''
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jooq'

	implementation 'org.flywaydb:flyway-core'
	runtimeOnly 'org.flywaydb:flyway-database-postgresql:10.11.1'
	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

    implementation 'org.jooq:jooq:3.19.7'
	jooqCodegen 'org.postgresql:postgresql'
}



tasks.named('test') {
	useJUnitPlatform()
}

jooq {
    configuration {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = 'jdbc:postgresql://localhost:5432/postgres'
            user = 'postgres'
            password = 'password'
        }
        generator {
            database {
                name = 'org.jooq.meta.postgres.PostgresDatabase'
                inputSchema = 'public'
            }
            generate {
                sources = true
                records = true
                immutablePojos = true
                fluentSetters = true
            }
            target {
                packageName = 'shorter.jooq'
            }
        }
    }
}

flyway {
	url = 'jdbc:postgresql://localhost:5432/postgres'
	user = 'postgres'
	password = 'password'
	locations = ['classpath:db/migration']
}

flywayMigrate.dependsOn classes

sourceSets {
    main {
        java {
        srcDir 'build/generated-sources/jooq'
	}
    }
}